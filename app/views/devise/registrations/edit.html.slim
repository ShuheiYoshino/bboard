- provide(:title, "UserEdit")
.userEdit.row
  .userEdit__title.col-md-6.offset-md-3
    h2 ユーザー情報の編集
  .userEdit__form.col-md-6.offset-md-3
    = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }, class: "form-group") do |f|
      = render "shared/error_messages", object: f.object
      .userEdit__form--field
        = f.label :name
        = f.text_field :name, autofocus: true, class: "form-control"
      .userEdit__form--field
        = f.label :email
        = f.email_field :email, autofocus: true, autocomplete: "email", class: "form-control"
      .userEdit__form--field
        = f.label :password
        - if @minimum_password_length
            | (
            = @minimum_password_length
            | 文字以上)
        = f.password_field :password, autocomplete: "new-password", placeholder: "変更する場合のみ入力", class: "form-control"
      .userEdit__form--field
        = f.label :current_password
        | (入力必須)
        = f.password_field :current_password, autocomplete: "current-password", class: "form-control", required: true
      .userEdit__form--actions
        = f.submit "変更する", class: "btn btn-primary w-100"
.userDelete.row
  .userDelete__title.col-md-6.offset-md-3
    .divider
      hr
    h3 アカウントを削除する
    - if current_user.admin?
      p テストユーザーの削除はできません
      .userDelete_desctiption--links
        button.btn.btn-outline-secondary.w-100 アカウントを削除する
    - else
      p アカウントを削除すると二度と復元できません。
      .userDelete_desctiption--links
        = button_to "アカウントを削除する", registration_path(resource_name),class: "btn btn-danger w-100", data: { confirm: "本当に削除しますか?" }, method: :delete
.backHome.row
  .backHome__form.col-md-6.offset-md-3
    .backHome__form--links
      = link_to "戻る", :back
